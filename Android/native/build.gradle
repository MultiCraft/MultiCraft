plugins {
	id 'com.android.library'
}

android {
	buildToolsVersion = "36.0.0"
	compileSdk = 36
	ndkVersion = "28.2.13676358"
	namespace = "com.multicraft"

	defaultConfig {
		minSdk = 23
		targetSdk = 36

		externalNativeBuild {
			ndkBuild {
				arguments "-j${Runtime.runtime.availableProcessors()}",
						"--output-sync=none",
						"versionMajor=${versionMajor}",
						"versionMinor=${versionMinor}",
						"versionPatch=${versionPatch}",
						"versionExtra=${versionExtra}",
						"developmentBuild=${developmentBuild}"
			}
		}
	}

	externalNativeBuild {
		ndkBuild {
			path "jni/Android.mk"
		}
	}

	// supported architectures
	splits {
		abi {
			enable true
			reset()
			include 'armeabi-v7a', 'arm64-v8a', 'x86_64'
		}
	}

	buildTypes {
		release {
			externalNativeBuild {
				ndkBuild {
					arguments 'NDEBUG=1'
				}
			}
		}
	}
}

// get precompiled deps
def buildDirectory = layout.buildDirectory.get().asFile
def depsZip = new File(buildDirectory, "deps.zip")
def depsDir = file("deps")

tasks.register('downloadDeps') {
	doLast {
		if (!depsZip.exists()) {
			println "Downloading dependencies..."
			depsZip.parentFile.mkdirs()
			new URL("https://github.com/MultiCraft/deps_android/releases/latest/download/deps_android.zip")
					.withInputStream { i -> depsZip.withOutputStream { it << i } }
			println "Downloaded to ${depsZip}"
		}
	}
}

tasks.register('getDeps', Copy) {
	dependsOn 'downloadDeps'

	from { zipTree(depsZip) }
	into depsDir

	onlyIf {
		!depsDir.exists()
	}

	doLast {
		println "Dependencies unpacked into ${depsDir}"
	}
}

preBuild.dependsOn 'getDeps'

android.defaultConfig.externalNativeBuild.ndkBuild {
	arguments 'prebuilt=$(if $(strip $(wildcard $(prebuilt_path))),$(prebuilt_path),.)'
}
